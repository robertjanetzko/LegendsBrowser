#set($title=$site.name) #decorate("layout.vm")

<h3>$site.name</h3>

<p>
	$site.type 
	#if($site.owner) of $site.owner.root.link#end
	#if($site.ruin) (ruin)#end
</p>

<div class="object-map">
<div id="map" style="width: 300px; height: 300px"></div>
#if($sitemap)
	<img class="site-map" src="$suburi/sitemap/$site.id" width="300" />
#end
</div>
#parse("map.vm")
<script>
	addSite('$site.mapDescription', $site.x1, $site.y1, $site.x2, $site.y2, '#F0F', '$site.glyph');
	zoomTo($site.x, $site.y, 4);
</script>

<div class="object-header">
	<!-- Nav tabs -->
	<ul class="nav nav-tabs object-tab" role="tablist">
	#set($first=true)
	#if($site.structures.size()>0)
		<li role="presentation" #if($first)class="active"#end><a href="#tab-structures" role="tab" data-toggle="tab">Structures ($site.structures.size())</a></li>
		#set($first=false)
	#end
	#if($site.siteProperties.size()>0)
		<li role="presentation" #if($first)class="active"#end><a href="#tab-properties" role="tab" data-toggle="tab">Properties ($site.siteProperties.size())</a></li>
		#set($first=false)
	#end
	#if($site.populations.size()>0)
		<li role="presentation" #if($first)class="active"#end><a href="#tab-pop" role="tab" data-toggle="tab">Populations ($site.populations.size())</a></li>
		#set($first=false)
	#end
	</ul>

	<!-- Tab panes -->
	<div class="tab-content">
		#set($first=true)
 		#if($site.structures.size()>0)
		<div role="tabpanel" class="tab-pane #if($first)active#end" id="tab-structures">
			<table class="table table-hover object-table">
				<thead><tr>
					<th>Structure</th>
					<th>Type</th>
				</tr></thead>
				#foreach( $structure in $site.structures )
				<tr>
					<td>$structure.link</td>
					<td>$structure.type</td>
				</tr>
				#end
			</table>
		</div>
		#set($first=false)
		#end

		#if($site.siteProperties.size()>0)
		<div role="tabpanel" class="tab-pane #if($first)active#end" id="tab-properties">
			<table class="table table-hover object-table">
				<thead><tr>
					<th>Name or owner</th>
					<th>Type</th>
				</tr></thead>
				#foreach( $property in $site.siteProperties )
				    #if ($property.ownerId > -1)
				        #set ($owner = $World.getHistoricalFigure($property.ownerId))
					#elseif ($property.structureId > -1)
					    #set ($owner = $World.getStructure($property.structureId, $site.id))
					#else
					    #set ($owner = "")
					#end
					<tr>
					    <td>#if($owner != "")$owner.link #else no owner#end</td>
					    <td>$property.type</td>
				    </tr>
				#end
			</table>
		</div>
		#end
		
 		#if($site.populations.size()>0)
		<div role="tabpanel" class="tab-pane #if($first)active#end" id="tab-pop">
			<table class="table table-hover object-table">
				<thead><tr>
					<th>Count</th>
					<th width="100%">Race</th>
				</tr></thead>
				#foreach( $pop in $site.populations )
				<tr>
					<td align="right">$pop.numbers</td>
					<td>$pop.race</td>
				</tr>
				#end
			</table>
		</div>
		#set($first=false)
		#end 
	</div>
</div>


#if($sitemap)
<div class="site-map-full">
    <div class="site-map-full-container">
        <img class="site-map-full-image" src="$suburi/sitemap/$site.id"/>
	</div>
    <i class="site-map-full-close glyphicon glyphicon-remove"></i>
</div>
#end

#if($sitemap)
<script>
    (function() {
        var background = $('.site-map-full');
        var image = $('.site-map-full-image');
        var closeButton = $('.site-map-full-close');
        var container = $('.site-map-full-container');

        var aspectRatio = 1 // width/height

        background.on('click', function(e) {
            if (e.target !== this) return;

            $('body').removeClass('site-map-full-visible');
        });
        closeButton.on('click', function(e) {
            $('body').removeClass('site-map-full-visible');
        });
        $('.site-map').on('click', function(e) {
            $('body').addClass('site-map-full-visible');
        });

        var containerHiddenFix = new MutationObserver(function(mutationsList) {
            if(container.css('overflow') === 'hidden') {
                container.css('overflow', '')
            }
        });

        containerHiddenFix.observe(container[0], { attributes: true, attributeNames: ['style'] })

        var panzoom = image.panzoom({
            minScale: 1,
			contain: 'invert'
        });

        panzoom.parent().on('mousewheel.focal', function( e ) {
            var delta = e.delta || e.originalEvent.wheelDelta;
            var zoomOut = delta ? delta < 0 : e.originalEvent.deltaY > 0;

            var oldMatrix = panzoom.panzoom('getTransform');
            panzoom.panzoom('zoom', zoomOut, {
                increment: 0.05,
                animate: false,
				focal: e
            });
            var newMatrix = panzoom.panzoom('getTransform')

			if(oldMatrix !== newMatrix) {
                e.preventDefault();
			}
        });
    })();
</script>
#end

#parse("events.vm") #end
